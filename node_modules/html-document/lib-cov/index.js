
// instrument by jscoverage, do not modifly this file
(function (file, lines, conds, source) {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (BASE._$jscoverage) {
    BASE._$jscmd(file, 'init', lines, conds, source);
    return;
  }
  var cov = {};
  /**
   * jsc(file, 'init', lines, condtions)
   * jsc(file, 'line', lineNum)
   * jsc(file, 'cond', lineNum, expr, start, offset)
   */
  function jscmd(file, type, line, express, start, offset) {
    var storage;
    switch (type) {
      case 'init':
        if(cov[file]){
          storage = cov[file];
        } else {
          storage = [];
          for (var i = 0; i < line.length; i ++) {
            storage[line[i]] = 0;
          }
          var condition = express;
          var source = start;
          storage.condition = condition;
          storage.source = source;
        }
        cov[file] = storage;
        break;
      case 'line':
        storage = cov[file];
        storage[line] ++;
        break;
      case 'cond':
        storage = cov[file];
        storage.condition[line] ++;
        return express;
    }
  }

  BASE._$jscoverage = cov;
  BASE._$jscmd = jscmd;
  jscmd(file, 'init', lines, conds, source);
})('lib/index.js', [1,3,5,6,7,8,9], {}, ["\"use strict\";","","var Document = require(\"./Document\").Document;","","global.window = global;","global.document = new Document();","global.Event = require(\"./Event\").Event;","global.Node = require(\"./Node\").Node;","global.DocumentFragment = require(\"./DocumentFragment\").DocumentFragment;","//# sourceMappingURL=index.js.map"]);
_$jscmd("lib/index.js", "line", 1);

"use strict";

_$jscmd("lib/index.js", "line", 3);

var Document = require("./Document").Document;

_$jscmd("lib/index.js", "line", 5);

global.window = global;

_$jscmd("lib/index.js", "line", 6);

global.document = new Document();

_$jscmd("lib/index.js", "line", 7);

global.Event = require("./Event").Event;

_$jscmd("lib/index.js", "line", 8);

global.Node = require("./Node").Node;

_$jscmd("lib/index.js", "line", 9);

global.DocumentFragment = require("./DocumentFragment").DocumentFragment;