
// instrument by jscoverage, do not modifly this file
(function (file, lines, conds, source) {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (BASE._$jscoverage) {
    BASE._$jscmd(file, 'init', lines, conds, source);
    return;
  }
  var cov = {};
  /**
   * jsc(file, 'init', lines, condtions)
   * jsc(file, 'line', lineNum)
   * jsc(file, 'cond', lineNum, expr, start, offset)
   */
  function jscmd(file, type, line, express, start, offset) {
    var storage;
    switch (type) {
      case 'init':
        if(cov[file]){
          storage = cov[file];
        } else {
          storage = [];
          for (var i = 0; i < line.length; i ++) {
            storage[line[i]] = 0;
          }
          var condition = express;
          var source = start;
          storage.condition = condition;
          storage.source = source;
        }
        cov[file] = storage;
        break;
      case 'line':
        storage = cov[file];
        storage[line] ++;
        break;
      case 'cond':
        storage = cov[file];
        storage.condition[line] ++;
        return express;
    }
  }

  BASE._$jscoverage = cov;
  BASE._$jscmd = jscmd;
  jscmd(file, 'init', lines, conds, source);
})('lib/utils/escapeHTML.js', [1,3,7,5], {"4_6_7":0}, ["\"use strict\";","","module.exports = function (string) {","  if (!string) {","    return string;","  }","  return String(string).replace(/&(?!\\w+;)/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");","};","//# sourceMappingURL=../utils/escapeHTML.js.map"]);
_$jscmd("lib/utils/escapeHTML.js", "line", 1);

"use strict";

_$jscmd("lib/utils/escapeHTML.js", "line", 3);

module.exports = function(string) {
    if (_$jscmd("lib/utils/escapeHTML.js", "cond", "4_6_7", !string)) {
        _$jscmd("lib/utils/escapeHTML.js", "line", 5);
        return string;
    }
    _$jscmd("lib/utils/escapeHTML.js", "line", 7);
    return String(string).replace(/&(?!\w+;)/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
};