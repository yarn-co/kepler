
// instrument by jscoverage, do not modifly this file
(function (file, lines, conds, source) {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (BASE._$jscoverage) {
    BASE._$jscmd(file, 'init', lines, conds, source);
    return;
  }
  var cov = {};
  /**
   * jsc(file, 'init', lines, condtions)
   * jsc(file, 'line', lineNum)
   * jsc(file, 'cond', lineNum, expr, start, offset)
   */
  function jscmd(file, type, line, express, start, offset) {
    var storage;
    switch (type) {
      case 'init':
        if(cov[file]){
          storage = cov[file];
        } else {
          storage = [];
          for (var i = 0; i < line.length; i ++) {
            storage[line[i]] = 0;
          }
          var condition = express;
          var source = start;
          storage.condition = condition;
          storage.source = source;
        }
        cov[file] = storage;
        break;
      case 'line':
        storage = cov[file];
        storage[line] ++;
        break;
      case 'cond':
        storage = cov[file];
        storage.condition[line] ++;
        return express;
    }
  }

  BASE._$jscoverage = cov;
  BASE._$jscmd = jscmd;
  jscmd(file, 'init', lines, conds, source);
})('lib/HTMLElement/ClassList.js', [1,3,8,84,9,18,22,26,41,56,66,70,81,14,15,19,23,27,28,29,30,32,33,37,42,43,44,45,47,48,52,57,58,63,61,67,76], {"4_6_11":0,"5_6_13":0,"31_10_34":0,"36_8_7":0,"46_10_12":0,"51_8_7":0,"58_26_26":0,"58_55_24":0,"58_26_14":0,"58_55_15":0,"60_8_6":0}, ["\"use strict\";","","var _classProps = function (child, staticProps, instanceProps) {","  if (staticProps) Object.defineProperties(child, staticProps);","  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);","};","","var ClassList = (function () {","  var ClassList =","  /**","   * @param {HTMLElement} element","   */","  function ClassList(element) {","    this._element = element;","    this.tokens = [];","  };","","  ClassList.prototype._parse = function (tokens) {","    this.tokens = tokens.split(\" \");","  };","","  ClassList.prototype._stringify = function () {","    this._element._setAttribute(\"class\", this.tokens.join(\" \"));","  };","","  ClassList.prototype.add = function () {","    var _this = this;","    var updated = false;","    Array.prototype.forEach.call(arguments, function (token) {","      token = String(token);","      if (_this.tokens.indexOf(token) === -1) {","        _this.tokens.push(token);","        updated = true;","      }","    });","    if (updated) {","      this._stringify();","    }","  };","","  ClassList.prototype.remove = function () {","    var _this2 = this;","    var updated = false;","    Array.prototype.forEach.call(arguments, function (token) {","      var index = _this2.tokens.indexOf(token);","      if (index !== -1) {","        _this2.tokens.splice(index, 1);","        updated = true;","      }","    });","    if (updated) {","      this._stringify();","    }","  };","","  ClassList.prototype.toggle = function (token, force) {","    var result = this.contains(token);","    var method = result ? force !== true && \"remove\" : force !== false && \"add\";","","    if (method) {","      this[method](token);","    }","    return !result;","  };","","  ClassList.prototype.contains = function (token) {","    return this.tokens.indexOf(token) !== -1;","  };","","  _classProps(ClassList, null, {","    length: {","      /**","       * @return {Number}","       */","      get: function () {","        return this.tokens.length;","      }","    }","  });","","  return ClassList;","})();","","exports.ClassList = ClassList;","//# sourceMappingURL=../HTMLElement/ClassList.js.map"]);
_$jscmd("lib/HTMLElement/ClassList.js", "line", 1);

"use strict";

_$jscmd("lib/HTMLElement/ClassList.js", "line", 3);

var _classProps = function(child, staticProps, instanceProps) {
    if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "4_6_11", staticProps)) Object.defineProperties(child, staticProps);
    if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "5_6_13", instanceProps)) Object.defineProperties(child.prototype, instanceProps);
};

_$jscmd("lib/HTMLElement/ClassList.js", "line", 8);

var ClassList = function() {
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 9);
    var ClassList = /**
   * @param {HTMLElement} element
   */
    function ClassList(element) {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 14);
        this._element = element;
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 15);
        this.tokens = [];
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 18);
    ClassList.prototype._parse = function(tokens) {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 19);
        this.tokens = tokens.split(" ");
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 22);
    ClassList.prototype._stringify = function() {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 23);
        this._element._setAttribute("class", this.tokens.join(" "));
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 26);
    ClassList.prototype.add = function() {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 27);
        var _this = this;
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 28);
        var updated = false;
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 29);
        Array.prototype.forEach.call(arguments, function(token) {
            _$jscmd("lib/HTMLElement/ClassList.js", "line", 30);
            token = String(token);
            if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "31_10_34", _this.tokens.indexOf(token) === -1)) {
                _$jscmd("lib/HTMLElement/ClassList.js", "line", 32);
                _this.tokens.push(token);
                _$jscmd("lib/HTMLElement/ClassList.js", "line", 33);
                updated = true;
            }
        });
        if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "36_8_7", updated)) {
            _$jscmd("lib/HTMLElement/ClassList.js", "line", 37);
            this._stringify();
        }
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 41);
    ClassList.prototype.remove = function() {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 42);
        var _this2 = this;
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 43);
        var updated = false;
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 44);
        Array.prototype.forEach.call(arguments, function(token) {
            _$jscmd("lib/HTMLElement/ClassList.js", "line", 45);
            var index = _this2.tokens.indexOf(token);
            if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "46_10_12", index !== -1)) {
                _$jscmd("lib/HTMLElement/ClassList.js", "line", 47);
                _this2.tokens.splice(index, 1);
                _$jscmd("lib/HTMLElement/ClassList.js", "line", 48);
                updated = true;
            }
        });
        if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "51_8_7", updated)) {
            _$jscmd("lib/HTMLElement/ClassList.js", "line", 52);
            this._stringify();
        }
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 56);
    ClassList.prototype.toggle = function(token, force) {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 57);
        var result = this.contains(token);
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 58);
        var method = result ? _$jscmd("lib/HTMLElement/ClassList.js", "cond", "58_26_26", _$jscmd("lib/HTMLElement/ClassList.js", "cond", "58_26_14", force !== true) && "remove") : _$jscmd("lib/HTMLElement/ClassList.js", "cond", "58_55_24", _$jscmd("lib/HTMLElement/ClassList.js", "cond", "58_55_15", force !== false) && "add");
        if (_$jscmd("lib/HTMLElement/ClassList.js", "cond", "60_8_6", method)) {
            _$jscmd("lib/HTMLElement/ClassList.js", "line", 61);
            this[method](token);
        }
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 63);
        return !result;
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 66);
    ClassList.prototype.contains = function(token) {
        _$jscmd("lib/HTMLElement/ClassList.js", "line", 67);
        return this.tokens.indexOf(token) !== -1;
    };
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 70);
    _classProps(ClassList, null, {
        length: {
            /**
       * @return {Number}
       */
            get: function() {
                _$jscmd("lib/HTMLElement/ClassList.js", "line", 76);
                return this.tokens.length;
            }
        }
    });
    _$jscmd("lib/HTMLElement/ClassList.js", "line", 81);
    return ClassList;
}();

_$jscmd("lib/HTMLElement/ClassList.js", "line", 84);

exports.ClassList = ClassList;