
// instrument by jscoverage, do not modifly this file
(function (file, lines, conds, source) {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (BASE._$jscoverage) {
    BASE._$jscmd(file, 'init', lines, conds, source);
    return;
  }
  var cov = {};
  /**
   * jsc(file, 'init', lines, condtions)
   * jsc(file, 'line', lineNum)
   * jsc(file, 'cond', lineNum, expr, start, offset)
   */
  function jscmd(file, type, line, express, start, offset) {
    var storage;
    switch (type) {
      case 'init':
        if(cov[file]){
          storage = cov[file];
        } else {
          storage = [];
          for (var i = 0; i < line.length; i ++) {
            storage[line[i]] = 0;
          }
          var condition = express;
          var source = start;
          storage.condition = condition;
          storage.source = source;
        }
        cov[file] = storage;
        break;
      case 'line':
        storage = cov[file];
        storage[line] ++;
        break;
      case 'cond':
        storage = cov[file];
        storage.condition[line] ++;
        return express;
    }
  }

  BASE._$jscoverage = cov;
  BASE._$jscmd = jscmd;
  jscmd(file, 'init', lines, conds, source);
})('lib/HTMLElement.js', [1,3,8,20,21,22,23,25,27,86,9,17,28,38,40,49,83,29,30,35,42,45,57,67,75,76,77], {"4_6_11":0,"5_6_13":0,"41_8_25":0,"42_27_5":0,"44_8_25":0,"45_28_5":0,"78_69_2":0,"78_74_43":0}, ["\"use strict\";","","var _classProps = function (child, staticProps, instanceProps) {","  if (staticProps) Object.defineProperties(child, staticProps);","  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);","};","","var _extends = function (child, parent) {","  child.prototype = Object.create(parent.prototype, {","    constructor: {","      value: child,","      enumerable: false,","      writable: true,","      configurable: true","    }","  });","  child.__proto__ = parent;","};","","var Element = require(\"./Element\").Element;","var CSSStyleDeclaration = require(\"./HTMLElement/CSSStyleDeclaration\").CSSStyleDeclaration;","var ClassList = require(\"./HTMLElement/ClassList\").ClassList;","var escapeAttribute = require(\"./utils/escapeAttribute\");","","var voidElements = \"area base br col embed hr img input keygen link meta param source track wbr\".split(\" \");","","var HTMLElement = (function (Element) {","  var HTMLElement = function HTMLElement() {","    Element.call(this);","    this.style = new CSSStyleDeclaration(this);","    /**","     * returns a token list of the class attribute of the element","     * @type {ClassList}","     */","    this.classList = new ClassList(this);","  };","","  _extends(HTMLElement, Element);","","  HTMLElement.prototype._updatedAttribute = function (attributeName, value) {","    if (attributeName === \"style\") {","      this.style.cssText = value || \"\";","    }","    if (attributeName === \"class\") {","      this.classList._parse(value || \"\");","    }","  };","","  _classProps(HTMLElement, null, {","    className: {","      /**","       * Gets the class of the element.","       *","       * @return {String}","       */","      get: function () {","        return this.getAttribute(\"class\");","      },","","","      /**","       * Sets the class of the element.","       *","       * @param {String} className","       */","      set: function (className) {","        this.setAttribute(\"class\", className);","      }","    },","    outerHTML: {","      /**","       * @return {String}","       */","      get: function () {","        var _this = this;","        return \"<\" + this.nodeName + Object.keys(this._attributes).reduce(function (value, attributeName) {","          return value + \" \" + attributeName + \"=\\\"\" + escapeAttribute(_this._attributes[attributeName]) + \"\\\"\";","        }, \"\") + \">\" + (voidElements.indexOf(this.nodeName) !== -1 ? \"\" : this.innerHTML + \"</\" + this.nodeName + \">\");","      }","    }","  });","","  return HTMLElement;","})(Element);","","exports.HTMLElement = HTMLElement;","//# sourceMappingURL=HTMLElement.js.map"]);
_$jscmd("lib/HTMLElement.js", "line", 1);

"use strict";

_$jscmd("lib/HTMLElement.js", "line", 3);

var _classProps = function(child, staticProps, instanceProps) {
    if (_$jscmd("lib/HTMLElement.js", "cond", "4_6_11", staticProps)) Object.defineProperties(child, staticProps);
    if (_$jscmd("lib/HTMLElement.js", "cond", "5_6_13", instanceProps)) Object.defineProperties(child.prototype, instanceProps);
};

_$jscmd("lib/HTMLElement.js", "line", 8);

var _extends = function(child, parent) {
    _$jscmd("lib/HTMLElement.js", "line", 9);
    child.prototype = Object.create(parent.prototype, {
        constructor: {
            value: child,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    _$jscmd("lib/HTMLElement.js", "line", 17);
    child.__proto__ = parent;
};

_$jscmd("lib/HTMLElement.js", "line", 20);

var Element = require("./Element").Element;

_$jscmd("lib/HTMLElement.js", "line", 21);

var CSSStyleDeclaration = require("./HTMLElement/CSSStyleDeclaration").CSSStyleDeclaration;

_$jscmd("lib/HTMLElement.js", "line", 22);

var ClassList = require("./HTMLElement/ClassList").ClassList;

_$jscmd("lib/HTMLElement.js", "line", 23);

var escapeAttribute = require("./utils/escapeAttribute");

_$jscmd("lib/HTMLElement.js", "line", 25);

var voidElements = "area base br col embed hr img input keygen link meta param source track wbr".split(" ");

_$jscmd("lib/HTMLElement.js", "line", 27);

var HTMLElement = function(Element) {
    _$jscmd("lib/HTMLElement.js", "line", 28);
    var HTMLElement = function HTMLElement() {
        _$jscmd("lib/HTMLElement.js", "line", 29);
        Element.call(this);
        _$jscmd("lib/HTMLElement.js", "line", 30);
        this.style = new CSSStyleDeclaration(this);
        _$jscmd("lib/HTMLElement.js", "line", 35);
        /**
     * returns a token list of the class attribute of the element
     * @type {ClassList}
     */
        this.classList = new ClassList(this);
    };
    _$jscmd("lib/HTMLElement.js", "line", 38);
    _extends(HTMLElement, Element);
    _$jscmd("lib/HTMLElement.js", "line", 40);
    HTMLElement.prototype._updatedAttribute = function(attributeName, value) {
        if (_$jscmd("lib/HTMLElement.js", "cond", "41_8_25", attributeName === "style")) {
            _$jscmd("lib/HTMLElement.js", "line", 42);
            this.style.cssText = _$jscmd("lib/HTMLElement.js", "cond", "42_27_5", value) || "";
        }
        if (_$jscmd("lib/HTMLElement.js", "cond", "44_8_25", attributeName === "class")) {
            _$jscmd("lib/HTMLElement.js", "line", 45);
            this.classList._parse(_$jscmd("lib/HTMLElement.js", "cond", "45_28_5", value) || "");
        }
    };
    _$jscmd("lib/HTMLElement.js", "line", 49);
    _classProps(HTMLElement, null, {
        className: {
            /**
       * Gets the class of the element.
       *
       * @return {String}
       */
            get: function() {
                _$jscmd("lib/HTMLElement.js", "line", 57);
                return this.getAttribute("class");
            },
            /**
       * Sets the class of the element.
       *
       * @param {String} className
       */
            set: function(className) {
                _$jscmd("lib/HTMLElement.js", "line", 67);
                this.setAttribute("class", className);
            }
        },
        outerHTML: {
            /**
       * @return {String}
       */
            get: function() {
                _$jscmd("lib/HTMLElement.js", "line", 75);
                var _this = this;
                _$jscmd("lib/HTMLElement.js", "line", 76);
                return "<" + this.nodeName + Object.keys(this._attributes).reduce(function(value, attributeName) {
                    _$jscmd("lib/HTMLElement.js", "line", 77);
                    return value + " " + attributeName + '="' + escapeAttribute(_this._attributes[attributeName]) + '"';
                }, "") + ">" + (voidElements.indexOf(this.nodeName) !== -1 ? _$jscmd("lib/HTMLElement.js", "cond", "78_69_2", "") : _$jscmd("lib/HTMLElement.js", "cond", "78_74_43", this.innerHTML + "</" + this.nodeName + ">"));
            }
        }
    });
    _$jscmd("lib/HTMLElement.js", "line", 83);
    return HTMLElement;
}(Element);

_$jscmd("lib/HTMLElement.js", "line", 86);

exports.HTMLElement = HTMLElement;