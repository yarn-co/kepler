
// instrument by jscoverage, do not modifly this file
(function (file, lines, conds, source) {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (BASE._$jscoverage) {
    BASE._$jscmd(file, 'init', lines, conds, source);
    return;
  }
  var cov = {};
  /**
   * jsc(file, 'init', lines, condtions)
   * jsc(file, 'line', lineNum)
   * jsc(file, 'cond', lineNum, expr, start, offset)
   */
  function jscmd(file, type, line, express, start, offset) {
    var storage;
    switch (type) {
      case 'init':
        if(cov[file]){
          storage = cov[file];
        } else {
          storage = [];
          for (var i = 0; i < line.length; i ++) {
            storage[line[i]] = 0;
          }
          var condition = express;
          var source = start;
          storage.condition = condition;
          storage.source = source;
        }
        cov[file] = storage;
        break;
      case 'line':
        storage = cov[file];
        storage[line] ++;
        break;
      case 'cond':
        storage = cov[file];
        storage.condition[line] ++;
        return express;
    }
  }

  BASE._$jscoverage = cov;
  BASE._$jscmd = jscmd;
  jscmd(file, 'init', lines, conds, source);
})('lib/Abstract/AbstractCSSStyleDeclaration.js', [1,3,8,14,116,9,10,11,15,22,45,53,57,61,65,75,80,93,113,19,23,24,25,26,42,27,31,35,29,33,37,38,39,46,47,50,48,54,58,62,67,68,69,70,71,76,77,84,90,82,86,88,99,108], {"4_6_11":0,"5_6_13":0,"28_10_5":0,"32_10_9":0,"36_10_10":0,"39_39_9":0,"48_45_27":0,"48_45_11":0,"54_11_80":0,"54_11_33":0,"54_48_43":0,"58_11_33":0,"58_48_39":0,"62_11_23":0,"62_38_28":0,"66_8_33":0,"81_8_33":0,"85_8_33":0}, ["\"use strict\";","","var _classProps = function (child, staticProps, instanceProps) {","  if (staticProps) Object.defineProperties(child, staticProps);","  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);","};","","var CSSStyleRule = function CSSStyleRule(propertyName, value, important) {","  this.name = propertyName;","  this.value = value;","  this.important = important;","};","","var AbstractCSSStyleDeclaration = (function () {","  var AbstractCSSStyleDeclaration =","  /**","   */","  function AbstractCSSStyleDeclaration() {","    throw new Error(\"Abstract class\");","  };","","  AbstractCSSStyleDeclaration.prototype._parse = function (style) {","    var _this = this;","    this._properties = [];","    this._propertiesMap = {};","    style.split(\";\").forEach(function (part) {","      part = part.trim();","      if (!part) {","        return;","      }","      var important = !!part.match(/!important$/);","      if (important) {","        part = part.slice(0, -\"!important\".length);","      }","      var splitPoint = part.indexOf(\":\");","      if (splitPoint) {","        var key = part.slice(0, splitPoint).trim();","        var value = part.slice(splitPoint + 1).trim();","        _this._setProperty(key, value, important && \"important\");","      }","    });","    this._stringify();","  };","","  AbstractCSSStyleDeclaration.prototype._stringify = function () {","    var stylified = \"\";","    this._properties.forEach(function (s) {","      stylified += s.name + \":\" + s.value + (s.important && \"!important\" || \"\") + \";\";","    });","    this._value = stylified;","  };","","  AbstractCSSStyleDeclaration.prototype.getPropertyPriority = function (propertyName) {","    return this._propertiesMap[propertyName] && this._propertiesMap[propertyName].important && \"important\";","  };","","  AbstractCSSStyleDeclaration.prototype.getPropertyValue = function (propertyName) {","    return this._propertiesMap[propertyName] && this._propertiesMap[propertyName].value;","  };","","  AbstractCSSStyleDeclaration.prototype.item = function (index) {","    return this._properties[index] && this._properties[index].name;","  };","","  AbstractCSSStyleDeclaration.prototype.removeProperty = function (propertyName) {","    if (this._propertiesMap[propertyName]) {","      var value = this._propertiesMap[propertyName];","      this._properties.splice(this._properties.indexOf(value), 1);","      delete this._propertiesMap[propertyName];","      this._stringify();","      return value.value;","    }","  };","","  AbstractCSSStyleDeclaration.prototype.setProperty = function (propertyName, value, important) {","    this._setProperty(propertyName, value, important);","    this._stringify();","  };","","  AbstractCSSStyleDeclaration.prototype._setProperty = function (propertyName, value, important) {","    if (!propertyName.match(/^[a-z\\-]+$/)) {","      throw new Error(\"Not valid property name: \" + propertyName);","    }","    var cssRule = new CSSStyleRule(propertyName, value, important === \"important\");","    if (this._propertiesMap[propertyName]) {","      this._properties.splice(this._properties.indexOf(this._propertiesMap[propertyName]), 1, cssRule);","    } else {","      this._properties.push(cssRule);","    }","    this._propertiesMap[propertyName] = cssRule;","  };","","  _classProps(AbstractCSSStyleDeclaration, null, {","    cssText: {","      /**","       * @return {String}","       */","      get: function () {","        return this._value;","      },","","","      /**","       * @param {String} style","       * @return {String}","       */","      set: function (style) {","        this._parse(style);","      }","    }","  });","","  return AbstractCSSStyleDeclaration;","})();","","exports.AbstractCSSStyleDeclaration = AbstractCSSStyleDeclaration;","//# sourceMappingURL=../Abstract/AbstractCSSStyleDeclaration.js.map"]);
_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 1);

"use strict";

_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 3);

var _classProps = function(child, staticProps, instanceProps) {
    if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "4_6_11", staticProps)) Object.defineProperties(child, staticProps);
    if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "5_6_13", instanceProps)) Object.defineProperties(child.prototype, instanceProps);
};

_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 8);

var CSSStyleRule = function CSSStyleRule(propertyName, value, important) {
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 9);
    this.name = propertyName;
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 10);
    this.value = value;
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 11);
    this.important = important;
};

_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 14);

var AbstractCSSStyleDeclaration = function() {
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 15);
    var AbstractCSSStyleDeclaration = /**
   */
    function AbstractCSSStyleDeclaration() {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 19);
        throw new Error("Abstract class");
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 22);
    AbstractCSSStyleDeclaration.prototype._parse = function(style) {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 23);
        var _this = this;
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 24);
        this._properties = [];
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 25);
        this._propertiesMap = {};
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 26);
        style.split(";").forEach(function(part) {
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 27);
            part = part.trim();
            if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "28_10_5", !part)) {
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 29);
                return;
            }
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 31);
            var important = !!part.match(/!important$/);
            if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "32_10_9", important)) {
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 33);
                part = part.slice(0, -"!important".length);
            }
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 35);
            var splitPoint = part.indexOf(":");
            if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "36_10_10", splitPoint)) {
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 37);
                var key = part.slice(0, splitPoint).trim();
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 38);
                var value = part.slice(splitPoint + 1).trim();
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 39);
                _this._setProperty(key, value, _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "39_39_9", important) && "important");
            }
        });
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 42);
        this._stringify();
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 45);
    AbstractCSSStyleDeclaration.prototype._stringify = function() {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 46);
        var stylified = "";
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 47);
        this._properties.forEach(function(s) {
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 48);
            stylified += s.name + ":" + s.value + (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "48_45_27", _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "48_45_11", s.important) && "!important") || "") + ";";
        });
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 50);
        this._value = stylified;
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 53);
    AbstractCSSStyleDeclaration.prototype.getPropertyPriority = function(propertyName) {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 54);
        return _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "54_11_80", _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "54_11_33", this._propertiesMap[propertyName]) && _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "54_48_43", this._propertiesMap[propertyName].important)) && "important";
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 57);
    AbstractCSSStyleDeclaration.prototype.getPropertyValue = function(propertyName) {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 58);
        return _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "58_11_33", this._propertiesMap[propertyName]) && _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "58_48_39", this._propertiesMap[propertyName].value);
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 61);
    AbstractCSSStyleDeclaration.prototype.item = function(index) {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 62);
        return _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "62_11_23", this._properties[index]) && _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "62_38_28", this._properties[index].name);
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 65);
    AbstractCSSStyleDeclaration.prototype.removeProperty = function(propertyName) {
        if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "66_8_33", this._propertiesMap[propertyName])) {
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 67);
            var value = this._propertiesMap[propertyName];
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 68);
            this._properties.splice(this._properties.indexOf(value), 1);
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 69);
            delete this._propertiesMap[propertyName];
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 70);
            this._stringify();
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 71);
            return value.value;
        }
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 75);
    AbstractCSSStyleDeclaration.prototype.setProperty = function(propertyName, value, important) {
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 76);
        this._setProperty(propertyName, value, important);
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 77);
        this._stringify();
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 80);
    AbstractCSSStyleDeclaration.prototype._setProperty = function(propertyName, value, important) {
        if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "81_8_33", !propertyName.match(/^[a-z\-]+$/))) {
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 82);
            throw new Error("Not valid property name: " + propertyName);
        }
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 84);
        var cssRule = new CSSStyleRule(propertyName, value, important === "important");
        if (_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "cond", "85_8_33", this._propertiesMap[propertyName])) {
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 86);
            this._properties.splice(this._properties.indexOf(this._propertiesMap[propertyName]), 1, cssRule);
        } else {
            _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 88);
            this._properties.push(cssRule);
        }
        _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 90);
        this._propertiesMap[propertyName] = cssRule;
    };
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 93);
    _classProps(AbstractCSSStyleDeclaration, null, {
        cssText: {
            /**
       * @return {String}
       */
            get: function() {
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 99);
                return this._value;
            },
            /**
       * @param {String} style
       * @return {String}
       */
            set: function(style) {
                _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 108);
                this._parse(style);
            }
        }
    });
    _$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 113);
    return AbstractCSSStyleDeclaration;
}();

_$jscmd("lib/Abstract/AbstractCSSStyleDeclaration.js", "line", 116);

exports.AbstractCSSStyleDeclaration = AbstractCSSStyleDeclaration;